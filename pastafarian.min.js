!function(n){function t(n,t){var e=Error.call(this,"Transition from "+n+" to "+t+" is not allowed");return e.name="IllegalTransitionException",e}function e(n){function e(n){if("function"!=typeof o.error)throw n[0];o.error.apply(this,n)}var r={},o={transitions:n.states,current:n.initial,error:n.error};o.bind=function(n,t){return r[n]=r[n]||[],r[n].push(t),o},o.unbind=function(n,t){return n in r&&r[n].indexOf(t)>-1&&r[n].splice(r[n].indexOf(t),1),o},o.on=o.bind;var i=function(n,t){if(n in r)for(var o=0;o<r[n].length;++o)try{r[n][o].apply(this,t)}catch(i){e([i])}};return o.go=function(n){var r=o.current,c=Array.prototype.slice.call(arguments,1);o.transitions[r].indexOf(n)>-1?(i("after:"+r,[n].concat(c)),i("before:"+n,[r].concat(c)),o.current=n,i(n,[r].concat(c)),i("*",[r,n].concat(c))):e([new t(r,n),r,n].concat(c))},o}"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:"undefined"!=typeof self?self.StateMachine=e:n.StateMachine=e}(this);